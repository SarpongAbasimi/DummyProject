openapi: "3.0.0"
info:
  description: "Subscription Service - [Source Code](https://github.com/SarpongAbasimi/DummyProject)."
  version: "0.0.1"
  title: "Subscription Service  - Sarpong"
  contact:
    email: "dummyProject@demo.com"
tags:
- name: "Subscription"
  description: "To allow users to manage their github subscriptions to the alerts."
paths:
  /subscription/{user}:
    get:
      tags:
      - "Subscription"
      summary: "Returns the subscriptions of a user"
      parameters:
        - name: "user"
          in: path
          required: true
          description: "The slack user id."
          schema:
            type : "string"
      responses:
        '200':
          description: "Returns the list of current subscriptions of the user whose slack_id was provided in the request route"
          content:
            application/json:
              schema:
                $ref: "#/definitions/GeSubscriptionResponseData"
        '404':
          description: "Returns an error if the user doesn't exists"
        '500':
          description: "Returns an internal server error if something went wrong"
    post:
      tags:
      - "Subscription"
      summary: "Adds new subscriptions to a user"
      parameters:
      - name: "user"
        in: "path"
        required: true
        description: "The slack user id"
        schema:
          type : "string"
      requestBody:
        $ref: "#/components/requestBodies/postSubscriptionRequestBody"
      responses:
        '201':
          description: "Returns the list of repositories that the user has subscribed to"
          content:
            application/json:
              schema:
                type: string
                example: "resource created"
        '400':
          description: "Returns an error if body is malformed or some of the repositories is not valid"
        '500':
          description: "Returns an internal server error if something went wrong"
    delete:
      tags:
      - "Subscription"
      summary: "Removes subscriptions from a user"
      parameters:
        - name: "user"
          in: "path"
          required: true
          description: "The slack user id."
          schema:
            type : "string"
      requestBody:
        $ref: "#/components/requestBodies/deleteSubscriptionRequestBody"
      responses:
        '204':
          description: "The user have been unsubscribe from the valid repositories sent"
          content:
            schema:
              type: string
              example: "No Content"
        '400':
          description: "Returns an error if body is malformed"
        '404':
          description: "Returns an error if the user doesn't exists"
        '500':
          description: "Returns an internal server error if something went wrong"

  /subscription/slack/command:
    post:
      tags:
      - "Subscription"
      summary: "Adds new subscriptions to an user through an slack command"
      requestBody:
        $ref: "#/components/requestBodies/slackCommandRequestBody"
      responses:
        '201':
          description: "Returns the list of repositories that the user just subscribed"
          content:
            application/json:
              schema:
                $ref: '#/definitions/SubscriptionResponse'
        '400':
          description: "Returns an error if body is malformed or some of the repositories is not valid"
        '500':
          description: "Returns an internal server error if something went wrong"

components:
  requestBodies:
    postSubscriptionRequestBody:
      content:
        application/json:
          schema:
            $ref: "#/definitions/SubscriptionArray"

    deleteSubscriptionRequestBody:
      content:
        application/json:
          schema:
            $ref: "#/definitions/SubscriptionArray"

    slackCommandRequestBody:
      description: "The slack command attributes generated by the slack bot application"
      content:
        application/x-www-form-urlencoded:
          schema:
            $ref: '#/definitions/SlackCommand'

definitions:
  GeSubscriptionResponseData:
    type: "object"
    properties:
      subscriptions:
        type: "array"
        items:
          $ref: "#/definitions/Subscription"
        example:
          - organization: "47Deg"
            repository: "Cool Repo"
            subscribedAt: "2021-08-10T10:19:52.376Z"
          - organization: "47Degrees"
            repository: "Cooler Repo"
            subscribedAt: "2021-08-10T10:19:52.376Z"

  SubscriptionArray:
    type: "object"
    properties:
      subscriptions:
        type: "array"
        items:
          $ref: "#/definitions/Subscription"
        example:
          - organization: "47Deg"
            repository: "Cool Repo"
            subscribedAt: "2021-08-10T10:19:52.376Z"
          - organization: "47Degrees"
            repository: "Cooler Repo"
            subscribedAt: "2021-08-10T10:19:52.376Z"

  Subscription:
    type: "object"
    properties:
      organization:
        type: "string"
        default: "47Deg"
      repository:
        type: "string"
        default: "Cool Repository"
      subscribedAt:
        type: "string"
        format: "date-time"
  SubscriptionResponse:
    type: "object"
    properties:
      organization:
        type: "string"
      repository:
        type: "string"
  SubscriptionArrayWithoutSubAt:
    type: "object"
    properties:
      subscriptions:
      type: "array"
      items:
        $ref: "#/definitions/Subscription"
      example:
        - organization: "47Deg"
          repository: "Cool Repo"
        - organization: "47Degrees"
          repository: "Cooler Repo"
  SlackCommand:
    type: "object"
    properties:
      command:
        type: "string"
        description: "The command that user typed in to trigger this request"
      text:
        type: "string"
        description: "This is part of the Slack Slach command. Checkout Slack [Creating Slash Command](https://api.slack.com/interactivity/slash-commands#creating_commands)"
      response_url:
        type: "string"
        format: "uri"
        description: "A temporary webhook URL that you can use to generate [messages responses](https://api.slack.com/interactivity/handling#message_responses)."
      trigger_id:
        type: "string"
        description: "A short-lived ID that will let your app open a modal (in slack)"
      user_id:
        type: "string"
        description: "The ID of the user who triggered the command."
      channel_id:
        type: "string"
        description: "The ID of the channel that the user used to send the command."